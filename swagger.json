{
  "openapi": "3.0.0",
  "info": {
    "title": "Önder Grup Back End API",
    "version": "2.0.0",
    "description": "Önder Grup Back End API for Embedded & Hydraulic",
    "contact": {
      "name": "Halil İbrahim Direktör",
      "email": "hidirektor@gmail.com",
      "url": "https://hidirektor.com.tr"
    }
  },
  "servers": [
    {
      "url": "http://ondergrup.hidirektor.com.tr:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/changePass": {
      "post": {
        "summary": "Change user password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "oldPassword",
                  "newPassword"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The username of the user"
                  },
                  "oldPassword": {
                    "type": "string",
                    "description": "The current password of the user"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "The new password for the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or password change policy violation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password can only be changed once every 7 days"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials, or user not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid current password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "password"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The username of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "description": "The ID of the user"
                    },
                    "accessToken": {
                      "type": "string",
                      "description": "Access token for user authentication"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "Refresh token for user authentication"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error during login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error during login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Database error during login or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "examples": {
                      "databaseError": {
                        "summary": "Database error",
                        "value": "Database error during login"
                      },
                      "unexpectedError": {
                        "summary": "Unexpected error",
                        "value": "An unexpected error occurred during login"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "User logout",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The refresh token of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error logging out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error logging out"
                    },
                    "error": {
                      "type": "string",
                      "description": "Error details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "userType",
                  "nameSurname",
                  "eMail",
                  "phoneNumber",
                  "companyName",
                  "password"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The username of the user"
                  },
                  "userType": {
                    "type": "string",
                    "description": "The type of user (e.g., SysOp, Merchant, Carrier, Customer)"
                  },
                  "nameSurname": {
                    "type": "string",
                    "description": "The name and surname of the user"
                  },
                  "eMail": {
                    "type": "string",
                    "description": "The email address of the user"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the user"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "The company name of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "string",
                      "description": "The unique ID of the user"
                    },
                    "userName": {
                      "type": "string",
                      "description": "The username of the user"
                    },
                    "userType": {
                      "type": "string",
                      "description": "The type of user"
                    },
                    "nameSurname": {
                      "type": "string",
                      "description": "The name and surname of the user"
                    },
                    "eMail": {
                      "type": "string",
                      "description": "The email address of the user"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "The phone number of the user"
                    },
                    "companyName": {
                      "type": "string",
                      "description": "The company name of the user"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or unique constraint error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": {
                        "uniqueError": {
                          "summary": "Unique constraint error",
                          "value": "Username is already taken"
                        },
                        "validationError": {
                          "summary": "Validation error",
                          "value": "Validation error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while registering user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred while registering user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resetPass": {
      "post": {
        "summary": "Reset user's password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "newPassword"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The username of the user"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "The new password for the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while resetting the password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred while resetting the password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAllMachines": {
      "get": {
        "summary": "Retrieve all machines",
        "tags": [
          "Machine"
        ],
        "responses": {
          "200": {
            "description": "A list of all machines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The machine ID",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "The machine name",
                            "example": "Machine A"
                          },
                          "type": {
                            "type": "string",
                            "description": "The machine type",
                            "example": "Type X"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No machines found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No any machines found on database."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateOwner": {
      "put": {
        "summary": "Update the owner of a machine",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machineID",
                  "userName"
                ],
                "properties": {
                  "machineID": {
                    "type": "integer",
                    "description": "ID of the machine to update",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "description": "Username of the new owner",
                    "example": "johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine owner updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine owner updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User or machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createMaintenance": {
      "post": {
        "summary": "Create a new maintenance record",
        "tags": [
          "Maintenance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machineID",
                  "technicianID"
                ],
                "properties": {
                  "machineID": {
                    "type": "integer",
                    "description": "ID of the machine being maintained",
                    "example": 1
                  },
                  "technicianID": {
                    "type": "integer",
                    "description": "ID of the technician performing the maintenance",
                    "example": 2
                  },
                  "kontrol11": {
                    "type": "integer",
                    "description": "Status of kontrol 11",
                    "example": 1
                  },
                  "kontrol12": {
                    "type": "integer",
                    "description": "Status of kontrol 12",
                    "example": 1
                  },
                  "kontrol13": {
                    "type": "integer",
                    "description": "Status of kontrol 13",
                    "example": 1
                  },
                  "kontrol14": {
                    "type": "integer",
                    "description": "Status of kontrol 14",
                    "example": 1
                  },
                  "kontrol21": {
                    "type": "integer",
                    "description": "Status of kontrol 21",
                    "example": 1
                  },
                  "kontrol22": {
                    "type": "integer",
                    "description": "Status of kontrol 22",
                    "example": 1
                  },
                  "kontrol23": {
                    "type": "integer",
                    "description": "Status of kontrol 23",
                    "example": 1
                  },
                  "kontrol24": {
                    "type": "integer",
                    "description": "Status of kontrol 24",
                    "example": 1
                  },
                  "kontrol31": {
                    "type": "integer",
                    "description": "Status of kontrol 31",
                    "example": 1
                  },
                  "kontrol32": {
                    "type": "integer",
                    "description": "Status of kontrol 32",
                    "example": 1
                  },
                  "kontrol33": {
                    "type": "integer",
                    "description": "Status of kontrol 33",
                    "example": 1
                  },
                  "kontrol34": {
                    "type": "integer",
                    "description": "Status of kontrol 34",
                    "example": 1
                  },
                  "kontrol35": {
                    "type": "integer",
                    "description": "Status of kontrol 35",
                    "example": 1
                  },
                  "kontrol36": {
                    "type": "integer",
                    "description": "Status of kontrol 36",
                    "example": 0
                  },
                  "kontrol41": {
                    "type": "integer",
                    "description": "Status of kontrol 41",
                    "example": 0
                  },
                  "kontrol42": {
                    "type": "integer",
                    "description": "Status of kontrol 42",
                    "example": 0
                  },
                  "kontrol43": {
                    "type": "integer",
                    "description": "Status of kontrol 43",
                    "example": 0
                  },
                  "kontrol44": {
                    "type": "integer",
                    "description": "Status of kontrol 44",
                    "example": 0
                  },
                  "kontrol45": {
                    "type": "integer",
                    "description": "Status of kontrol 45",
                    "example": 0
                  },
                  "kontrol46": {
                    "type": "integer",
                    "description": "Status of kontrol 46",
                    "example": 0
                  },
                  "kontrol51": {
                    "type": "integer",
                    "description": "Status of kontrol 51",
                    "example": 0
                  },
                  "kontrol52": {
                    "type": "integer",
                    "description": "Status of kontrol 52",
                    "example": 0
                  },
                  "kontrol53": {
                    "type": "integer",
                    "description": "Status of kontrol 53",
                    "example": 0
                  },
                  "kontrol54": {
                    "type": "integer",
                    "description": "Status of kontrol 54",
                    "example": 0
                  },
                  "kontrol55": {
                    "type": "integer",
                    "description": "Status of kontrol 55",
                    "example": 0
                  },
                  "kontrol56": {
                    "type": "integer",
                    "description": "Status of kontrol 56",
                    "example": 0
                  },
                  "kontrol61": {
                    "type": "integer",
                    "description": "Status of kontrol 61",
                    "example": 0
                  },
                  "kontrol62": {
                    "type": "integer",
                    "description": "Status of kontrol 62",
                    "example": 0
                  },
                  "kontrol63": {
                    "type": "integer",
                    "description": "Status of kontrol 63",
                    "example": 0
                  },
                  "kontrol71": {
                    "type": "integer",
                    "description": "Status of kontrol 71",
                    "example": 0
                  },
                  "kontrol72": {
                    "type": "integer",
                    "description": "Status of kontrol 72",
                    "example": 0
                  },
                  "kontrol81": {
                    "type": "integer",
                    "description": "Status of kontrol 81",
                    "example": 0
                  },
                  "kontrol82": {
                    "type": "integer",
                    "description": "Status of kontrol 82",
                    "example": 0
                  },
                  "kontrol83": {
                    "type": "integer",
                    "description": "Status of kontrol 83",
                    "example": 0
                  },
                  "kontrol91": {
                    "type": "integer",
                    "description": "Status of kontrol 91",
                    "example": 0
                  },
                  "kontrol92": {
                    "type": "integer",
                    "description": "Status of kontrol 92",
                    "example": 0
                  },
                  "kontrol93": {
                    "type": "integer",
                    "description": "Status of kontrol 93",
                    "example": 0
                  },
                  "kontrol94": {
                    "type": "integer",
                    "description": "Status of kontrol 94",
                    "example": 0
                  },
                  "kontrol95": {
                    "type": "integer",
                    "description": "Status of kontrol 95",
                    "example": 0
                  },
                  "kontrol96": {
                    "type": "integer",
                    "description": "Status of kontrol 96",
                    "example": 0
                  },
                  "kontrol97": {
                    "type": "integer",
                    "description": "Status of kontrol 97",
                    "example": 0
                  },
                  "kontrol98": {
                    "type": "integer",
                    "description": "Status of kontrol 98",
                    "example": 0
                  },
                  "kontrol99": {
                    "type": "integer",
                    "description": "Status of kontrol 99",
                    "example": 0
                  },
                  "kontrol910": {
                    "type": "integer",
                    "description": "Status of kontrol 910",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Maintenance record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Maintenance record created successfully"
                    },
                    "maintenance": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the maintenance record",
                          "example": 1
                        },
                        "machineID": {
                          "type": "integer",
                          "description": "ID of the machine being maintained",
                          "example": 1
                        },
                        "technicianID": {
                          "type": "integer",
                          "description": "ID of the technician performing the maintenance",
                          "example": 2
                        },
                        "maintenanceDate": {
                          "type": "integer",
                          "description": "Timestamp of when the maintenance was performed",
                          "example": 1628000000
                        },
                        "kontrol11": {
                          "type": "integer",
                          "description": "Status of kontrol 11",
                          "example": 1
                        },
                        "kontrol12": {
                          "type": "integer",
                          "description": "Status of kontrol 12",
                          "example": 1
                        },
                        "kontrol13": {
                          "type": "integer",
                          "description": "Status of kontrol 13",
                          "example": 1
                        },
                        "kontrol14": {
                          "type": "integer",
                          "description": "Status of kontrol 14",
                          "example": 1
                        },
                        "kontrol21": {
                          "type": "integer",
                          "description": "Status of kontrol 21",
                          "example": 1
                        },
                        "kontrol22": {
                          "type": "integer",
                          "description": "Status of kontrol 22",
                          "example": 1
                        },
                        "kontrol23": {
                          "type": "integer",
                          "description": "Status of kontrol 23",
                          "example": 1
                        },
                        "kontrol24": {
                          "type": "integer",
                          "description": "Status of kontrol 24",
                          "example": 1
                        },
                        "kontrol31": {
                          "type": "integer",
                          "description": "Status of kontrol 31",
                          "example": 1
                        },
                        "kontrol32": {
                          "type": "integer",
                          "description": "Status of kontrol 32",
                          "example": 1
                        },
                        "kontrol33": {
                          "type": "integer",
                          "description": "Status of kontrol 33",
                          "example": 1
                        },
                        "kontrol34": {
                          "type": "integer",
                          "description": "Status of kontrol 34",
                          "example": 1
                        },
                        "kontrol35": {
                          "type": "integer",
                          "description": "Status of kontrol 35",
                          "example": 1
                        },
                        "kontrol36": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol41": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol42": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol43": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol44": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol45": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol46": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol51": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol52": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol53": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol54": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol55": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol56": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol61": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol62": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol63": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol71": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol72": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol81": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol82": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol83": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol91": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol92": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol93": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol94": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol95": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol96": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol97": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol98": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol99": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        },
                        "kontrol910": {
                          "type": "integer",
                          "description": "Status of kontrol 36",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "All fields are required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All fields are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteMaintenance": {
      "delete": {
        "summary": "Delete a maintenance record by ID",
        "tags": [
          "Maintenance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "maintenanceID"
                ],
                "properties": {
                  "maintenanceID": {
                    "type": "integer",
                    "description": "ID of the maintenance record to delete",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Maintenance record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Maintenance record deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "MaintenanceID is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "maintenanceID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Maintenance record not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Maintenance record not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/editMaintenance": {
      "put": {
        "summary": "Update a maintenance record by ID",
        "tags": [
          "Maintenance"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "maintenanceID"
                ],
                "properties": {
                  "maintenanceID": {
                    "type": "integer",
                    "description": "ID of the maintenance record to update",
                    "example": 1
                  },
                  "machineID": {
                    "type": "integer",
                    "description": "ID of the machine being maintained",
                    "example": 2
                  },
                  "technicianID": {
                    "type": "integer",
                    "description": "ID of the technician performing the maintenance",
                    "example": 3
                  },
                  "maintenanceDescription": {
                    "type": "string",
                    "description": "Description of the maintenance performed",
                    "example": "Replaced faulty wiring"
                  },
                  "maintenanceCost": {
                    "type": "number",
                    "description": "Cost of the maintenance",
                    "example": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Maintenance record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Maintenance record updated successfully"
                    },
                    "updatedMaintenance": {
                      "type": "object",
                      "description": "Updated maintenance record object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the maintenance record",
                          "example": 1
                        },
                        "machineID": {
                          "type": "integer",
                          "description": "ID of the machine being maintained",
                          "example": 2
                        },
                        "technicianID": {
                          "type": "integer",
                          "description": "ID of the technician performing the maintenance",
                          "example": 3
                        },
                        "maintenanceDate": {
                          "type": "integer",
                          "description": "Timestamp of when the maintenance was performed",
                          "example": 1628000000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "MaintenanceID is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "maintenanceID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Maintenance record not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Maintenance record not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteUser": {
      "delete": {
        "summary": "Deactivate a user by username",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "Username of the user to deactivate",
                    "example": "johndoe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deactivated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAllUsers": {
      "get": {
        "summary": "Get all active users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of active users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "User ID",
                            "example": 1
                          },
                          "username": {
                            "type": "string",
                            "description": "Username of the user",
                            "example": "johndoe"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the user",
                            "example": "johndoe@example.com"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if the user is active",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No active users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No active users found in the database."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateRole": {
      "put": {
        "summary": "Update user role",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "newRole"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "Username of the user",
                    "example": "johndoe"
                  },
                  "newRole": {
                    "type": "string",
                    "description": "New role to assign to the user",
                    "example": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User role updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createHydraulicUnit": {
      "post": {
        "summary": "Create a new Hydraulic Unit",
        "tags": [
          "HydraulicUnit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "userName",
                  "orderID",
                  "hydraulicType",
                  "partListFile",
                  "schematicFile"
                ],
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "Username of the user"
                  },
                  "orderID": {
                    "type": "string",
                    "description": "Order ID of the hydraulic unit"
                  },
                  "hydraulicType": {
                    "type": "string",
                    "description": "Type of the hydraulic unit"
                  },
                  "partListFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Excel file containing the part list"
                  },
                  "schematicFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file containing the schematic"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hydraulic Unit created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Hydraulic Unit created successfully"
                    },
                    "update": {
                      "$ref": "#/components/schemas/HydraulicUnit"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "userName, orderID, hydraulicType, partListFile and schematicFile are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/downloadPartList": {
      "post": {
        "summary": "Download the part list file for a specific Hydraulic Unit",
        "tags": [
          "HydraulicUnit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderID"
                ],
                "properties": {
                  "orderID": {
                    "type": "string",
                    "description": "The order ID of the Hydraulic Unit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the part list file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Hydraulic Unit not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "HydraulicUnit not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/downloadSchematic": {
      "post": {
        "summary": "Download the schematic file for a specific Hydraulic Unit",
        "tags": [
          "HydraulicUnit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderID"
                ],
                "properties": {
                  "orderID": {
                    "type": "string",
                    "description": "The order ID of the Hydraulic Unit"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the schematic file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Hydraulic Unit not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "HydraulicUnit not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getHydraulicStats": {
      "get": {
        "summary": "Get statistics for hydraulic units",
        "tags": [
          "HydraulicUnit"
        ],
        "responses": {
          "200": {
            "description": "Statistics of hydraulic units",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Sipariş Sayısı": {
                      "type": "integer",
                      "description": "Total number of orders",
                      "example": 150
                    },
                    "Klasik": {
                      "type": "integer",
                      "description": "Number of 'Klasik' type hydraulic units",
                      "example": 75
                    },
                    "Hidros": {
                      "type": "integer",
                      "description": "Number of 'Hidros' type hydraulic units",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Sunucu hatası"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getHydraulicUnitNumber": {
      "get": {
        "summary": "Get list of all hydraulic unit order numbers",
        "tags": [
          "HydraulicUnit"
        ],
        "responses": {
          "200": {
            "description": "A list of hydraulic unit order numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "ORD12345"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPartList/{orderID}": {
      "get": {
        "summary": "Get the part list file for a specific Hydraulic Unit",
        "tags": [
          "HydraulicUnit"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order ID of the Hydraulic Unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the part list file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Hydraulic Unit not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "HydraulicUnit not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getSchematic/{orderID}": {
      "get": {
        "summary": "Get the schematic file for a specific Hydraulic Unit",
        "tags": [
          "HydraulicUnit"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order ID of the Hydraulic Unit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the schematic file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Hydraulic Unit not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "HydraulicUnit not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addMachine": {
      "post": {
        "summary": "Add a new machine",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machineID": {
                    "type": "string",
                    "description": "The ID of the machine",
                    "example": "M1234"
                  },
                  "ownerID": {
                    "type": "string",
                    "description": "The ID of the owner",
                    "example": "O5678"
                  },
                  "machineType": {
                    "type": "string",
                    "description": "The type of the machine",
                    "example": "TypeA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine added successfully"
                    },
                    "machine": {
                      "$ref": "#/components/schemas/Machine"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All fields are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkMachineID": {
      "get": {
        "summary": "Check if a machine exists by machineID",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machineID": {
                    "type": "string",
                    "description": "The ID of the machine to check",
                    "example": "M1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Machine exists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "machineID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Machine not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exists": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Machine not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getErrors": {
      "get": {
        "summary": "Retrieve all errors for a specific machine",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machineID": {
                    "type": "string",
                    "description": "The ID of the machine",
                    "example": "M1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of machine errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machineErrors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MachineError"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "machineID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No machine errors found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No machine errors found for this machine"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getErrorsAll": {
      "get": {
        "summary": "Retrieve all errors for all machines owned by a specific user",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "The ID of the user",
                    "example": "U1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of machine errors for the user's machines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MachineError"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "userID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No machines found for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No machines found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMachines": {
      "get": {
        "summary": "Retrieve all machines owned by a specific user",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ownerID": {
                    "type": "string",
                    "description": "The ID of the owner",
                    "example": "O5678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of machines owned by the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Machine"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "ownerID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No machines found for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No machines found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMaintenances": {
      "get": {
        "summary": "Retrieve all maintenances for a specific machine",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machineID": {
                    "type": "string",
                    "description": "The ID of the machine",
                    "example": "M1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of maintenances for the machine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "machineMaintenances": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Maintenance"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "machineID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No maintenances found for the machine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No maintenances found for this machine"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMaintenancesAll": {
      "get": {
        "summary": "Retrieve all maintenances for all machines owned by a specific user",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "The ID of the user",
                    "example": "U1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of maintenances for the user's machines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maintenances": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Maintenance"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "userID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No machines found for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No machines found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateMachine": {
      "put": {
        "summary": "Update or create machine data",
        "tags": [
          "Machine"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machineID": {
                    "type": "string",
                    "description": "The ID of the machine",
                    "example": "M1234"
                  },
                  "updateData": {
                    "type": "object",
                    "description": "Data to update or create for the machine",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine data updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine data updated"
                    },
                    "updatedMachine": {
                      "$ref": "#/components/schemas/MachineData"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Machine data created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine data created"
                    },
                    "newMachineData": {
                      "$ref": "#/components/schemas/MachineData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "machineID is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateMachineRaw": {
      "put": {
        "summary": "Update or create machine data",
        "tags": [
          "Machine"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "machineID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the machine",
            "example": "M1234"
          },
          {
            "in": "query",
            "name": "updateData",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "description": "Data to update or create for the machine"
          }
        ],
        "responses": {
          "200": {
            "description": "Machine data updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine data updated"
                    },
                    "updatedMachine": {
                      "$ref": "#/components/schemas/MachineData"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Machine data created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Machine data created"
                    },
                    "newMachineData": {
                      "$ref": "#/components/schemas/MachineData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "machineID is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendMail": {
      "post": {
        "summary": "Send an OTP to the user's email",
        "tags": [
          "OTP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "otpSent": {
                      "type": "integer",
                      "description": "The UNIX timestamp when the OTP was sent",
                      "example": 1628070943
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email. User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to send OTP email. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendSMS": {
      "post": {
        "summary": "Send an OTP via SMS to the user's phone number",
        "tags": [
          "OTP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The user's username",
                    "example": "john_doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "otpSent": {
                      "type": "integer",
                      "description": "The UNIX timestamp when the OTP was sent",
                      "example": 1628070943
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid userID or phone number. User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error sending SMS"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detailed error response from Netgsm API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verifyOTP": {
      "post": {
        "summary": "Verify the OTP sent to the user",
        "tags": [
          "OTP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The user's username",
                    "example": "john_doe"
                  },
                  "otpCode": {
                    "type": "string",
                    "description": "The OTP code received by the user",
                    "example": "123456"
                  },
                  "otpSent": {
                    "type": "integer",
                    "description": "The UNIX timestamp when the OTP was sent",
                    "example": 1628070943
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP code."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or invalid OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP or OTP has expired."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred while verifying OTP."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createSubUser": {
      "post": {
        "summary": "Create a new subuser under an existing owner",
        "tags": [
          "Sub User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ownerID": {
                    "type": "string",
                    "description": "The ID of the owner user",
                    "example": "owner123"
                  },
                  "userID": {
                    "type": "string",
                    "description": "The ID of the new subuser",
                    "example": "subuser123"
                  },
                  "userName": {
                    "type": "string",
                    "description": "The username of the new subuser",
                    "example": "subuser_username"
                  },
                  "userType": {
                    "type": "string",
                    "description": "The type of the new subuser",
                    "example": "employee"
                  },
                  "nameSurname": {
                    "type": "string",
                    "description": "The full name of the new subuser",
                    "example": "John Doe"
                  },
                  "eMail": {
                    "type": "string",
                    "description": "The email address of the new subuser",
                    "example": "john.doe@example.com"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the new subuser",
                    "example": "+1234567890"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "The company name associated with the new subuser",
                    "example": "Acme Corporation"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new subuser",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "SubUser created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "SubUser created successfully"
                    },
                    "subUser": {
                      "type": "object",
                      "description": "The details of the created subuser"
                    },
                    "newUser": {
                      "type": "object",
                      "description": "The details of the newly created user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All fields are required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Owner not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteSubUser": {
      "delete": {
        "summary": "Delete a subuser and associated user by ID",
        "tags": [
          "Sub User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the subuser to delete",
                    "example": "subuser123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SubUser and associated User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "SubUser and associated User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "id is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "SubUser or User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "SubUser not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/editSubUser": {
      "put": {
        "summary": "Update a subuser and associated user by ID",
        "tags": [
          "Sub User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the subuser to update",
                    "example": "subuser123"
                  },
                  "ownerID": {
                    "type": "string",
                    "description": "The ID of the owner user",
                    "example": "owner123"
                  },
                  "userID": {
                    "type": "string",
                    "description": "The ID of the subuser user",
                    "example": "user456"
                  },
                  "userName": {
                    "type": "string",
                    "description": "The username of the subuser",
                    "example": "subuser"
                  },
                  "userType": {
                    "type": "string",
                    "description": "The type of the subuser",
                    "example": "subuser"
                  },
                  "nameSurname": {
                    "type": "string",
                    "description": "The full name of the subuser",
                    "example": "John Doe"
                  },
                  "eMail": {
                    "type": "string",
                    "description": "The email address of the subuser",
                    "example": "subuser@example.com"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the subuser",
                    "example": "+1234567890"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "The company name of the subuser",
                    "example": "SubUser Inc."
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password for the subuser (optional)",
                    "example": "newpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SubUser and associated User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "SubUser updated successfully"
                    },
                    "subUser": {
                      "type": "object",
                      "description": "The updated SubUser object"
                    },
                    "user": {
                      "type": "object",
                      "description": "The updated User object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All fields except password are required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "SubUser, Owner, or User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "SubUser not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getSubUsers": {
      "get": {
        "summary": "Retrieve sub-users and their associated users by ownerID",
        "tags": [
          "Sub User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ownerID": {
                    "type": "string",
                    "description": "The ID of the owner user",
                    "example": "owner123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved sub-users and associated users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subUsers": {
                      "type": "array",
                      "description": "Array of sub-user objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "subuser123"
                          },
                          "ownerID": {
                            "type": "string",
                            "example": "owner123"
                          },
                          "userID": {
                            "type": "string",
                            "example": "user456"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-16T12:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-16T12:00:00Z"
                          }
                        }
                      }
                    },
                    "users": {
                      "type": "array",
                      "description": "Array of associated User objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userID": {
                            "type": "string",
                            "example": "user456"
                          },
                          "userName": {
                            "type": "string",
                            "example": "username"
                          },
                          "userType": {
                            "type": "string",
                            "example": "user"
                          },
                          "nameSurname": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "eMail": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "example": "+1234567890"
                          },
                          "companyName": {
                            "type": "string",
                            "example": "User Inc."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-16T12:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-16T12:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "ownerID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No sub-users found for this owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No sub-users found for this owner"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/refreshToken": {
      "post": {
        "summary": "Refresh access token using refresh token",
        "tags": [
          "Token"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Refresh token to generate new access token",
                    "example": "refresh_token_string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing refresh token"
          },
          "403": {
            "description": "Forbidden - Invalid refresh token or token expired"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkUpdates": {
      "post": {
        "summary": "Check for updates based on current version",
        "tags": [
          "Version"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentVersion": {
                    "type": "string",
                    "description": "The current version to check against",
                    "example": "1.2.3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns whether an update is available and details if so",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updateAvailable": {
                      "type": "boolean",
                      "description": "Indicates if an update is available",
                      "example": true
                    },
                    "update": {
                      "type": "object",
                      "description": "Details of the available update",
                      "properties": {
                        "versionCode": {
                          "type": "string",
                          "example": "1.3.0"
                        },
                        "fileSize": {
                          "type": "integer",
                          "example": 1024
                        },
                        "crc": {
                          "type": "string",
                          "example": "abc123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing currentVersion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "currentVersion is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createVersion": {
      "post": {
        "summary": "Create a new version",
        "tags": [
          "Version"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "versionCode",
                  "versionTitle",
                  "versionDesc",
                  "file"
                ],
                "properties": {
                  "versionCode": {
                    "type": "string",
                    "description": "Version code of the new version. Must be unique.",
                    "example": "1.0.0"
                  },
                  "versionTitle": {
                    "type": "string",
                    "description": "Title of the new version",
                    "example": "Release 1.0.0"
                  },
                  "versionDesc": {
                    "type": "string",
                    "description": "Description of the new version",
                    "example": "This release includes several bug fixes and new features."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Hex file (.hex) to upload. Only .hex files are allowed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Version created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Version created successfully"
                    },
                    "update": {
                      "$ref": "#/components/schemas/Version"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing versionCode, versionTitle, or file, or invalid file format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "versionCode, versionTitle, and file are required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/downloadNewVersion": {
      "post": {
        "summary": "Download a specific version file",
        "tags": [
          "Version"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "versionCode": {
                    "type": "string",
                    "description": "Version code of the file to download",
                    "example": "1.0.0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Version file downloaded successfully",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing versionCode",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "versionCode is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Version not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Version not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/downloadProfilePhoto": {
      "post": {
        "summary": "Retrieve user's profile photo",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "User's name of the user and profile photo to retrieve",
                    "example": "hidirektor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the profile photo.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Profile photo not found for the provided user's name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile photo not found for the provided user's name."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPreferences": {
      "post": {
        "summary": "Retrieve user preferences",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "User ID of the preferences to retrieve",
                    "example": "123456789"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User preferences retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferences"
                }
              }
            }
          },
          "404": {
            "description": "Preferences not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Preferences not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getProfile": {
      "post": {
        "summary": "Retrieve user details and preferences",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "User ID of the user and preferences to retrieve",
                    "example": "123456789"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details and preferences retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "userPreferences": {
                      "$ref": "#/components/schemas/UserPreferences"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getProfilePhoto/{userName}": {
      "get": {
        "summary": "Retrieves the URL of a user's profile photo by userName.",
        "tags": [
          "User Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The username to find the profile photo URL."
          }
        ],
        "responses": {
          "200": {
            "description": "Profile photo retrieved successfully.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Profile photo not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/updatePreferences": {
      "post": {
        "summary": "Update user preferences",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "User ID of the user whose preferences to update",
                    "example": "123456789"
                  },
                  "preferencesData": {
                    "type": "object",
                    "description": "Updated preferences data to be applied",
                    "example": {
                      "theme": "dark",
                      "notifications": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preferences updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Preferences updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Preferences not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Preferences not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateProfile": {
      "post": {
        "summary": "Update user profile",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userID": {
                    "type": "string",
                    "description": "User ID of the user whose profile to update",
                    "example": "123456789"
                  },
                  "userData": {
                    "type": "object",
                    "description": "Updated user profile data to be applied",
                    "example": {
                      "name": "John Doe",
                      "email": "john.doe@example.com",
                      "phoneNumber": "+1234567890"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/uploadProfilePhoto": {
      "post": {
        "summary": "Uploads a user's profile photo and creates a profile photo entry in the database.",
        "tags": [
          "User Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile photo uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "update": {
                      "$ref": "#/components/schemas/ProfilePhoto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HydraulicUnit": {
        "type": "object",
        "required": [
          "userID",
          "userName",
          "orderID",
          "partListID",
          "schematicID",
          "hydraulicType"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-incrementing primary key"
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user"
          },
          "userName": {
            "type": "string",
            "description": "Unique username"
          },
          "orderID": {
            "type": "string",
            "description": "Unique identifier for the order"
          },
          "partListID": {
            "type": "string",
            "description": "Unique identifier for the part list"
          },
          "schematicID": {
            "type": "string",
            "description": "Unique identifier for the schematic"
          },
          "hydraulicType": {
            "type": "string",
            "description": "Type of hydraulic unit"
          },
          "createdDate": {
            "type": "integer",
            "description": "Timestamp of the creation date"
          }
        },
        "example": {
          "userID": "12345",
          "userName": "exampleUser",
          "orderID": "order123",
          "partListID": "partList123",
          "schematicID": "schematic123",
          "hydraulicType": "TypeA",
          "createdDate": 1622547802
        }
      },
      "Machine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the machine.",
            "example": 1
          },
          "machineID": {
            "type": "string",
            "description": "Unique identifier for the machine assigned by the system.",
            "example": "MCH123456"
          },
          "ownerID": {
            "type": "string",
            "description": "Unique identifier for the owner of the machine.",
            "example": "OWN987654"
          },
          "machineType": {
            "type": "string",
            "description": "Type or model of the machine.",
            "example": "ESP"
          },
          "createdAt": {
            "type": "integer",
            "description": "Timestamp of when the machine was created.",
            "example": 1628000000
          },
          "lastUpdate": {
            "type": "integer",
            "description": "Timestamp of the last update to the machine's record.",
            "example": 1628000000
          }
        }
      },
      "MachineData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the machine data entry.",
            "example": 1
          },
          "machineID": {
            "type": "string",
            "description": "Unique identifier for the machine.",
            "example": "MCH123456"
          },
          "wifiSSID": {
            "type": "string",
            "description": "WiFi SSID for the machine.",
            "example": "MyWiFiNetwork"
          },
          "wifiPass": {
            "type": "string",
            "description": "WiFi password for the machine.",
            "example": "MyWiFiPassword"
          },
          "devirmeYuruyusSecim": {
            "type": "integer",
            "description": "Selection for devirme yuruyus.",
            "example": 1
          },
          "calismaSekli": {
            "type": "integer",
            "description": "Working mode.",
            "example": 2
          },
          "emniyetCercevesi": {
            "type": "integer",
            "description": "Safety frame selection.",
            "example": 1
          },
          "yavaslamaLimit": {
            "type": "integer",
            "description": "Slowdown limit.",
            "example": 50
          },
          "altLimit": {
            "type": "integer",
            "description": "Lower limit.",
            "example": 20
          },
          "kapiTablaAcKonum": {
            "type": "integer",
            "description": "Door table open position.",
            "example": 30
          },
          "basincSalteri": {
            "type": "integer",
            "description": "Pressure switch setting.",
            "example": 1
          },
          "kapiSecimleri": {
            "type": "integer",
            "description": "Door selections.",
            "example": 3
          },
          "kapiAcTipi": {
            "type": "integer",
            "description": "Door open type.",
            "example": 1
          },
          "kapi1Tip": {
            "type": "integer",
            "description": "Type of door 1.",
            "example": 1
          },
          "kapi1AcSure": {
            "type": "integer",
            "description": "Door 1 open duration.",
            "example": 5
          },
          "kapi2Tip": {
            "type": "integer",
            "description": "Type of door 2.",
            "example": 2
          },
          "kapi2AcSure": {
            "type": "integer",
            "description": "Door 2 open duration.",
            "example": 6
          },
          "kapitablaTip": {
            "type": "integer",
            "description": "Table type.",
            "example": 2
          },
          "kapiTablaAcSure": {
            "type": "integer",
            "description": "Table open duration.",
            "example": 10
          },
          "yukariYavasLimit": {
            "type": "integer",
            "description": "Upper slow limit.",
            "example": 70
          },
          "devirmeYukariIleriLimit": {
            "type": "integer",
            "description": "Devirme upper forward limit.",
            "example": 60
          },
          "devirmeAsagiGeriLimit": {
            "type": "integer",
            "description": "Devirme lower back limit.",
            "example": 40
          },
          "devirmeSilindirTipi": {
            "type": "integer",
            "description": "Devirme cylinder type.",
            "example": 1
          },
          "platformSilindirTipi": {
            "type": "integer",
            "description": "Platform cylinder type.",
            "example": 2
          },
          "yukariValfTmr": {
            "type": "integer",
            "description": "Upper valve timer.",
            "example": 15
          },
          "asagiValfTmr": {
            "type": "integer",
            "description": "Lower valve timer.",
            "example": 10
          },
          "devirmeYukariIleriTmr": {
            "type": "integer",
            "description": "Devirme upper forward timer.",
            "example": 20
          },
          "devirmeAsagiGeriTmr": {
            "type": "integer",
            "description": "Devirme lower back timer.",
            "example": 18
          },
          "makineCalismaTmr": {
            "type": "integer",
            "description": "Machine working timer.",
            "example": 25
          },
          "buzzer": {
            "type": "integer",
            "description": "Buzzer setting.",
            "example": 1
          },
          "demoMode": {
            "type": "integer",
            "description": "Demo mode setting.",
            "example": 0
          },
          "calismaSayisi": {
            "type": "integer",
            "description": "Working count in units.",
            "example": 100
          },
          "calismaSayisiDemo": {
            "type": "integer",
            "description": "Working count in tens.",
            "example": 200
          },
          "dilSecim": {
            "type": "integer",
            "description": "Language selection.",
            "example": 1
          },
          "eepromData38": {
            "type": "integer",
            "description": "EEPROM data at position 38.",
            "example": 255
          },
          "eepromData39": {
            "type": "integer",
            "description": "EEPROM data at position 39.",
            "example": 255
          },
          "eepromData40": {
            "type": "integer",
            "description": "EEPROM data at position 40.",
            "example": 255
          },
          "eepromData41": {
            "type": "integer",
            "description": "EEPROM data at position 41.",
            "example": 255
          },
          "eepromData42": {
            "type": "integer",
            "description": "EEPROM data at position 42.",
            "example": 255
          },
          "eepromData43": {
            "type": "integer",
            "description": "EEPROM data at position 43.",
            "example": 255
          },
          "eepromData44": {
            "type": "integer",
            "description": "EEPROM data at position 44.",
            "example": 255
          },
          "eepromData45": {
            "type": "integer",
            "description": "EEPROM data at position 45.",
            "example": 255
          },
          "eepromData46": {
            "type": "integer",
            "description": "EEPROM data at position 46.",
            "example": 255
          },
          "eepromData47": {
            "type": "integer",
            "description": "EEPROM data at position 47.",
            "example": 255
          },
          "lcdBacklightSure": {
            "type": "integer",
            "description": "LCD backlight duration.",
            "example": 60
          }
        }
      },
      "MachineError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the machine error entry.",
            "example": 1
          },
          "machineID": {
            "type": "string",
            "description": "Unique identifier for the machine.",
            "example": "MCH123456"
          },
          "errorCode": {
            "type": "string",
            "description": "Code representing the specific error.",
            "example": "ERR001"
          },
          "errorMessage": {
            "type": "string",
            "description": "Description of the error.",
            "example": "Overheating detected"
          },
          "errorTime": {
            "type": "integer",
            "description": "Timestamp of when the error occurred.",
            "example": 1628000000
          }
        }
      },
      "Maintenance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the maintenance entry.",
            "example": 1
          },
          "machineID": {
            "type": "string",
            "description": "Unique identifier for the machine.",
            "example": "MCH123456"
          },
          "technicianID": {
            "type": "string",
            "description": "Unique identifier for the technician.",
            "example": "TECH987654"
          },
          "maintenanceDate": {
            "type": "integer",
            "description": "Timestamp of when the maintenance was performed.",
            "example": 1628000000
          },
          "kontrol11": {
            "type": "integer",
            "description": "Status of kontrol 11.",
            "example": 1
          },
          "kontrol12": {
            "type": "integer",
            "description": "Status of kontrol 12.",
            "example": 1
          },
          "kontrol13": {
            "type": "integer",
            "description": "Status of kontrol 13.",
            "example": 1
          },
          "kontrol14": {
            "type": "integer",
            "description": "Status of kontrol 14.",
            "example": 1
          },
          "kontrol21": {
            "type": "integer",
            "description": "Status of kontrol 21.",
            "example": 1
          },
          "kontrol22": {
            "type": "integer",
            "description": "Status of kontrol 22.",
            "example": 1
          },
          "kontrol23": {
            "type": "integer",
            "description": "Status of kontrol 23.",
            "example": 1
          },
          "kontrol24": {
            "type": "integer",
            "description": "Status of kontrol 24.",
            "example": 1
          },
          "kontrol31": {
            "type": "integer",
            "description": "Status of kontrol 31.",
            "example": 1
          },
          "kontrol32": {
            "type": "integer",
            "description": "Status of kontrol 32.",
            "example": 1
          },
          "kontrol33": {
            "type": "integer",
            "description": "Status of kontrol 33.",
            "example": 1
          },
          "kontrol34": {
            "type": "integer",
            "description": "Status of kontrol 34.",
            "example": 1
          },
          "kontrol35": {
            "type": "integer",
            "description": "Status of kontrol 35.",
            "example": 1
          },
          "kontrol36": {
            "type": "integer",
            "description": "Status of kontrol 36.",
            "example": 1
          },
          "kontrol41": {
            "type": "integer",
            "description": "Status of kontrol 41.",
            "example": 1
          },
          "kontrol42": {
            "type": "integer",
            "description": "Status of kontrol 42.",
            "example": 1
          },
          "kontrol43": {
            "type": "integer",
            "description": "Status of kontrol 43.",
            "example": 1
          },
          "kontrol44": {
            "type": "integer",
            "description": "Status of kontrol 44.",
            "example": 1
          },
          "kontrol45": {
            "type": "integer",
            "description": "Status of kontrol 45.",
            "example": 1
          },
          "kontrol46": {
            "type": "integer",
            "description": "Status of kontrol 46.",
            "example": 1
          },
          "kontrol51": {
            "type": "integer",
            "description": "Status of kontrol 51.",
            "example": 1
          },
          "kontrol52": {
            "type": "integer",
            "description": "Status of kontrol 52.",
            "example": 1
          },
          "kontrol53": {
            "type": "integer",
            "description": "Status of kontrol 53.",
            "example": 1
          },
          "kontrol54": {
            "type": "integer",
            "description": "Status of kontrol 54.",
            "example": 1
          },
          "kontrol55": {
            "type": "integer",
            "description": "Status of kontrol 55.",
            "example": 1
          },
          "kontrol56": {
            "type": "integer",
            "description": "Status of kontrol 56.",
            "example": 1
          },
          "kontrol61": {
            "type": "integer",
            "description": "Status of kontrol 61.",
            "example": 1
          },
          "kontrol62": {
            "type": "integer",
            "description": "Status of kontrol 62.",
            "example": 1
          },
          "kontrol63": {
            "type": "integer",
            "description": "Status of kontrol 63.",
            "example": 1
          },
          "kontrol71": {
            "type": "integer",
            "description": "Status of kontrol 71.",
            "example": 1
          },
          "kontrol72": {
            "type": "integer",
            "description": "Status of kontrol 72.",
            "example": 1
          },
          "kontrol81": {
            "type": "integer",
            "description": "Status of kontrol 81.",
            "example": 1
          },
          "kontrol82": {
            "type": "integer",
            "description": "Status of kontrol 82.",
            "example": 1
          },
          "kontrol83": {
            "type": "integer",
            "description": "Status of kontrol 83.",
            "example": 1
          },
          "kontrol91": {
            "type": "integer",
            "description": "Status of kontrol 91.",
            "example": 1
          },
          "kontrol92": {
            "type": "integer",
            "description": "Status of kontrol 92.",
            "example": 1
          },
          "kontrol93": {
            "type": "integer",
            "description": "Status of kontrol 93.",
            "example": 1
          },
          "kontrol94": {
            "type": "integer",
            "description": "Status of kontrol 94.",
            "example": 1
          },
          "kontrol95": {
            "type": "integer",
            "description": "Status of kontrol 95.",
            "example": 1
          },
          "kontrol96": {
            "type": "integer",
            "description": "Status of kontrol 96.",
            "example": 1
          },
          "kontrol97": {
            "type": "integer",
            "description": "Status of kontrol 97.",
            "example": 1
          },
          "kontrol98": {
            "type": "integer",
            "description": "Status of kontrol 98.",
            "example": 1
          },
          "kontrol99": {
            "type": "integer",
            "description": "Status of kontrol 99.",
            "example": 1
          },
          "kontrol910": {
            "type": "integer",
            "description": "Status of kontrol 910.",
            "example": 1
          }
        }
      },
      "OTPLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the OTP log entry.",
            "example": 1
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user.",
            "example": "USR123456"
          },
          "otpType": {
            "type": "string",
            "description": "Type of OTP (e.g., email, SMS).",
            "example": "SMS"
          },
          "otpCode": {
            "type": "string",
            "description": "OTP code sent to the user.",
            "example": "123456"
          },
          "otpSentTime": {
            "type": "integer",
            "description": "Timestamp of when the OTP was sent.",
            "example": 1628000000
          },
          "otpValidationTime": {
            "type": "integer",
            "description": "Timestamp of when the OTP was validated.",
            "example": 1628003600
          }
        }
      },
      "ProfilePhoto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The auto-generated ID of the profile photo."
          },
          "userName": {
            "type": "string",
            "description": "The username associated with the profile photo."
          },
          "fileID": {
            "type": "string",
            "description": "The unique identifier of the profile photo file."
          },
          "releaseDate": {
            "type": "integer",
            "format": "bigint",
            "description": "The release date of the profile photo in Unix timestamp format."
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The refresh token.",
            "example": "a1b2c3d4e5f6g7h8i9j0"
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user.",
            "example": "USR123456"
          }
        }
      },
      "SubUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the sub-user entry.",
            "example": 1
          },
          "ownerID": {
            "type": "string",
            "description": "Unique identifier for the owner.",
            "example": "OWNER123456"
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the sub-user.",
            "example": "USER123456"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user.",
            "example": 1
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user.",
            "example": "USR123456"
          },
          "userName": {
            "type": "string",
            "description": "Unique username for the user.",
            "example": "johndoe"
          },
          "userType": {
            "type": "string",
            "description": "Type of the user.",
            "example": "admin"
          },
          "nameSurname": {
            "type": "string",
            "description": "Full name of the user.",
            "example": "John Doe"
          },
          "eMail": {
            "type": "string",
            "description": "Email address of the user.",
            "example": "johndoe@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user.",
            "example": "+1234567890"
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company the user is associated with.",
            "example": "Example Corp"
          },
          "password": {
            "type": "string",
            "description": "Password of the user.",
            "example": "password123"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active.",
            "example": true
          },
          "createdAt": {
            "type": "integer",
            "description": "Timestamp of when the user was created.",
            "example": 1628000000
          }
        }
      },
      "UserPreferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user preferences entry.",
            "example": 1
          },
          "userID": {
            "type": "string",
            "description": "Unique identifier for the user.",
            "example": "USR123456"
          },
          "language": {
            "type": "boolean",
            "description": "Language preference of the user.",
            "example": true
          },
          "nightMode": {
            "type": "boolean",
            "description": "Whether night mode is enabled.",
            "example": false
          }
        }
      },
      "Version": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the version entry.",
            "example": 1
          },
          "versionTitle": {
            "type": "string",
            "description": "Title of the version.",
            "example": "1.0.0"
          },
          "versionDesc": {
            "type": "string",
            "description": "Description of the version.",
            "example": "Initial release"
          },
          "versionCode": {
            "type": "string",
            "description": "Unique code for the version.",
            "example": "v100"
          },
          "versionPath": {
            "type": "string",
            "description": "Bucket name for MinIO where the version is stored.",
            "example": "versions/1.0.0"
          },
          "releaseDate": {
            "type": "integer",
            "description": "Release date of the version in Unix timestamp format.",
            "example": 1622548800
          }
        }
      }
    }
  },
  "tags": []
}